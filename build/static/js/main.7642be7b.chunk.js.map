{"version":3,"sources":["Navigation.jsx","blocks/Register.jsx","blocks/Settings.jsx","blocks/Products.jsx","blocks/Loader.jsx","Statusbar.jsx","main.jsx","index.jsx"],"names":["Navigation","react_default","a","createElement","Fragment","className","this","props","brand","react_router_dom","to","role","connected","React","Component","imageStyle","maxWidth","maxHeight","width","height","objectFit","ImageContainer","_React$Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","alt","src","source","style","ProductDisplay","_React$Component2","_this","call","plusOne","bind","assertThisInitialized","minusOne","setInput","remove","product","id","add","enabled","name","sign","currentPrice","stock","currentStock","display","Register_ImageContainer","concat","onClick","Cart","_React$Component3","_this2","total","cart","reduce","b","quantity","toFixed","map","index","readableName","reset","done","Register","document","title","_this3","Register_Cart","products","p","i","Register_ProductDisplay","Settings","state","objectSpread","newProps","setState","htmlFor","type","onChange","e","target","placeholder","increments","min","max","step","round","refreshInterval","updateStatusBar","updateSettings","disabled","configSaved","window","confirm","restartServer","uuidv1","require","editing","specs","changeEnable","processUpdate","updateProduct","removeProduct","propName","propValue","push","tempName","minPrice","tempMinPrice","maxPrice","tempMaxPrice","tempCurrentPrice","startPrice","tempStartPrice","update","then","data","success","error","catch","err","console","_this4","_this5","checked","Boolean","Products","_this6","overlay","handleLeave","formSubmit","Array","from","querySelectorAll","filter","length","complete","_this7","preventDefault","querySelector","form","FormData","values","v","keys","alert","append","get","prod","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","return","new","blur","focus","_this8","Products_ProductDisplay","onMouseLeave","method","action","onSubmit","required","order","divStyle","justifyContent","alignItems","innerHeight","position","top","left","loaderStyle","border","borderTop","borderRadius","animationName","animationDuration","animationIterationCount","animationTimingFunction","containerStyle","flexDirection","Loader","waitingFor","footerStyle","bottom","textAlign","zIndex","Statusbar","content","nextProps","pClass","Main","settings","loading","statusbar","isMaster","URL","ws","localStorage","setItem","updateStatus","newProduct","addToCart","removeFromCart","emptyCart","checkoutCart","connect","forceUpdate","server","WebSocket","addEventListener","readyState","send","JSON","stringify","getItem","msg","parse","findIndex","dataProduct","for","prevState","forEach","prop","toConsumableArray","close","setTimeout","amt","find","entry","timeout","ret","saveSettings","fail","Promise","resolve","reject","fetch","headers","Content-Type","body","satisfy","btoa","resp","json","payload","response","classList","location","href","Navigation_Navigation","src_blocks_Loader","react_router","path","render","Register_Register","Products_Products","Settings_Settings","assign","Statusbar_Statusbar","ReactDOM","main_Main","getElementById"],"mappings":"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","file":"static/js/main.7642be7b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Navigation extends React.Component{\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <nav className=\"navbar navbar-expand bg-light sticky-top mb-2 navbar-light\">\r\n                    <div className=\"navbar-brand\">\r\n                        {this.props.brand}\r\n                    </div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/register\" className=\"nav-link\">\r\n                                Register\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/products\" className=\"nav-link\">\r\n                                Products\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/settings\" className=\"nav-link\">\r\n                                Settings\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"navbar-nav f-flex flex-column\">\r\n                        <span>Running as <span className=\"font-weight-bold\">{this.props.role ? 'Master' : 'Slave'}</span></span>\r\n                        <span className=\"text-secondary font-weight-light\">Status: {this.props.connected ? <span className=\"text-success\">Connected</span> :  <span className=\"text-danger\">Disconnected</span> }</span>\r\n                    </div>\r\n                </nav>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './Register.css';\r\nconst imageStyle= {\r\n    maxWidth: \"100px\",\r\n    maxHeight: '100px',\r\n    width: 'auto',\r\n    height: 'auto',\r\n    objectFit: 'contain'\r\n}\r\n\r\nexport class ImageContainer extends React.Component{\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <img alt=\"\" src={this.props.source} style={imageStyle} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport class ProductDisplay extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.plusOne = this.plusOne.bind(this);\r\n        this.minusOne = this.minusOne.bind(this);\r\n        this.setInput = this.props.setInput;\r\n    }\r\n    minusOne(){\r\n        this.props.remove(this.props.product.id, 1)\r\n    }\r\n    plusOne(){\r\n        this.props.add(this.props.product.id, 1)\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n            {this.props.product.enabled === true ? \r\n                <React.Fragment>\r\n                    <div className=\"col-auto col-sm-6 col-md-4 col-lg-3 mb-2\">\r\n                        <div className=\"bg-light rounded p-3\">\r\n                            <div className=\"row mb-4 d-flex justify-content-between p-3\">\r\n                                <b>\r\n                                    {this.props.product.name} \r\n                                </b>\r\n                                {this.props.sign} {this.props.product.currentPrice}\r\n                                <small className={this.props.product.stock < 30 ? \"text-danger\" : \"text-muted\"}>(stock: {this.props.product.currentStock})</small>\r\n                            </div>\r\n\r\n                            <div className=\"row mb-4\">\r\n                                <div className=\"col-12 d-flex justify-content-center\">\r\n                                    {this.props.product.display ? <ImageContainer className=\"col-12\" source={`${process.env.NODE_ENV === \"development\" ? 'http://localhost:3000' : ''}/image/${this.props.product.display}`} /> : null}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-2\">\r\n                                <div className=\"col-6\">\r\n                                    <p className=\"buttons minus rounded\" onClick={this.minusOne}>-</p>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <p className=\"buttons plus rounded\" onClick={this.plusOne}>+</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>          \r\n                    </div> \r\n                </React.Fragment>\r\n                : null\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport class Cart extends React.Component{\r\n    render(){\r\n        let total = this.props.cart.reduce((a, b) => { return a + (b.quantity * b.currentPrice)}, 0).toFixed(2);\r\n        return(\r\n            <React.Fragment> \r\n                <div className=\"col-12 col-lg-2 row ml-auto mr-auto mb-2 align-items-start\">\r\n                    <ul style={{width:'100%'}} className=\"list-group list-group-flush col-12\">\r\n                        {this.props.cart.map((product, index) => {\r\n                            return product.quantity > 0 ?\r\n                            <li key={index} className=\"list-group-item d-flex justify-content-between align-items-start\">\r\n                                {product.readableName} <small className=\"text-muted ml-2\">({this.props.sign} {product.currentPrice})</small>\r\n                                <span className=\"badge badge-primary badge-pill ml-auto\">{product.quantity}</span>\r\n                            </li>\r\n                            : null\r\n                        })}\r\n                    </ul>\r\n                    <p className=\"mt-3 col-12 h3 d-flex justify-content-around text-primary\">   \r\n                        {\r\n                            total > 0 ?\r\n                                <span>Total {this.props.sign} {total}</span>\r\n                            :\r\n                                <span>Checkout empty</span>\r\n                        }\r\n                    </p>              \r\n                    {\r\n                        total > 0 ?\r\n                            <div className=\"col-12 d-flex justify-content-around\">\r\n                                <button className=\"btn btn-danger\" onClick={this.props.reset}>Reset</button>\r\n                                <button className=\"btn btn-primary btn-lg\" onClick={this.props.done}>Done</button>\r\n                            </div>\r\n                        :\r\n                            null\r\n                    }      \r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class Register extends React.Component{\r\n    componentWillMount(){\r\n        document.title = 'Register'\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"row\">\r\n                    <Cart cart={this.props.cart} sign={this.props.sign} reset={this.props.reset} done={this.props.done} />\r\n                    <div className={`row productList mr-auto col-12 col-lg-10`}>\r\n                        {this.props.products.map((p, i) => {\r\n                                return p.enabled ? <ProductDisplay key={i} product={p} sign={this.props.sign} add={this.props.add} remove={this.props.remove} /> : null\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Settings extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            ...props\r\n        }\r\n    }\r\n    componentWillReceiveProps(newProps){\r\n        this.setState({\r\n            ...newProps\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        document.title = 'Settings'\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                    <form className=\"form\">\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col\">\r\n                            <label htmlFor=\"name\">\r\n                                Name:\r\n                            </label>\r\n                            <input  type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    name=\"name\" \r\n                                    value={this.state.name} \r\n                                    onChange={e => this.setState({name: e.target.value})} \r\n                                    placeholder=\"Set or update the name for your application\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col\">\r\n                            <label htmlFor=\"increments\">\r\n                                Round price to:\r\n                            </label>\r\n                            <input  type=\"number\" \r\n                                    className=\"form-control\" \r\n                                    name=\"increments\" \r\n                                    placeholder={this.state.increments}  \r\n                                    onChange={e => this.setState({increments: e.target.value})} \r\n                                    min=\"0.01\" \r\n                                    max=\"0.50\" \r\n                                    step=\"0.01\" />\r\n                        </div>\r\n                        <div className=\"form-group col\">\r\n                            <label htmlFor=\"round\">\r\n                                Decimal places:\r\n                            </label>\r\n                            <select name=\"round\" \r\n                                    className=\"form-control\" \r\n                                    value={this.state.round}\r\n                                    onChange={e => this.setState({round: e.target.value})} >\r\n                                <option value=\"0\">0</option>\r\n                                <option value=\"1\">0.1</option>\r\n                                <option value=\"2\">0.01</option>\r\n                            </select>\r\n                    </div> \r\n                    <div className=\"form-group col\">\r\n                            <label htmlFor=\"sign\">\r\n                                Currency symbol \r\n                            </label>\r\n                        <select  name=\"sign\" \r\n                                    value={this.state.sign}\r\n                                    onChange={e => this.setState({sign: e.target.value})}  \r\n                                    className=\"form-control\">\r\n                            <option value=\"€\">€</option>\r\n                            <option value=\"$\">$</option>\r\n                            <option value=\"£\">£</option>\r\n                        </select>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col\">\r\n                            <label htmlFor=\"refreshIntervalRange\">\r\n                                Refresh interval in seconds <small className=\"text-muted\">Setting 0 will mean that every time an order is pushed to the server it get's router directly to all clients</small>\r\n                            </label>\r\n                            <div>{this.state.refreshInterval}</div>\r\n                            <input  className=\"form-control-range\" \r\n                                    name=\"refreshInterval\" \r\n                                    type=\"range\" \r\n                                    min=\"0\" \r\n                                    max=\"300\" \r\n                                    value={this.state.refreshInterval}\r\n                                    onChange={e => this.setState({refreshInterval: e.target.value})}  />\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"form-row justify-content-around\">\r\n                        <button type=\"button\" \r\n                                className=\"btn btn-success\" \r\n                                onClick={() => {\r\n                                        this.props.updateStatusBar('Saving configuration', 'bg-primary text-white', false);\r\n                                        this.props.updateSettings(this.state)\r\n                                    }\r\n                                }>\r\n                            Save\r\n                        </button>\r\n                        <button type=\"button\"\r\n                                className=\"btn btn-warning\"\r\n                                disabled={!this.state.configSaved}\r\n                                onClick={() => {\r\n                                    if (window.confirm('Applying settings will restart the server, this will reset the application, timers and remove any unsaved or in progress transactions since last update\\nAre you sure?')){\r\n                                        this.props.restartServer()\r\n                                    }\r\n                                }}>\r\n                            Apply settings\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport './Products.css';\r\nconst uuidv1 = require('uuid/v1');\r\n\r\nclass ProductDisplay extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            editing: false,\r\n            ...props.specs,\r\n        }\r\n        this.changeEnable = this.changeEnable.bind(this);\r\n        this.processUpdate = this.processUpdate.bind(this);\r\n        this.updateProduct = this.updateProduct.bind(this);\r\n        this.removeProduct = this.removeProduct.bind(this);\r\n    }\r\n    changeEnable(){ \r\n        this.setState({\r\n            enabled: !this.state.enabled\r\n        }, () => {\r\n            this.updateProduct(this.props.specs.id, [\r\n                {\r\n                    propName: \"enabled\",\r\n                    propValue: this.state.enabled\r\n                }\r\n            ])    \r\n        });\r\n    }\r\n    processUpdate(){\r\n        let push = [];\r\n        if(this.state.name !== this.state.tempName) push.push({'propName': 'name', 'propValue': this.state.tempName});\r\n        if(this.state.minPrice !== this.state.tempMinPrice) push.push({'propName':'minPrice', 'propValue': this.state.tempMinPrice});\r\n        if(this.state.maxPrice !== this.state.tempMaxPrice) push.push({'propName': 'maxPrice', 'propValue': this.state.tempMaxPrice});\r\n        if(this.state.currentPrice !== this.state.tempCurrentPrice) push.push({'propName':'currentPrice', 'propValue': this.state.tempCurrentPrice});\r\n        if(this.state.startPrice !== this.state.tempStartPrice) push.push({'propName':'startPrice', 'propValue': this.state.tempStartPrice});\r\n        this.updateProduct(this.props.specs.id, push)\r\n    }\r\n    updateProduct(id, props){\r\n        this.props.update(id, props)\r\n        .then(\r\n            data => {\r\n                data.success ?\r\n                this.props.updateStatusBar('Saved product update', 'bg-success text-light') : \r\n                this.props.updateStatusBar(`Failed to save update, ${data.error}`, 'bg-danger text-white', false)\r\n            }\r\n        ).catch(err => console.error(err))\r\n    }\r\n    removeProduct(){\r\n        if(window.confirm('Deleting a product can not be reversed and the product will not be accessible anymore\\nAre you sure you want to remove this product?\\n\\nIf you just don\\'t want it to show up you can simply disable it')){\r\n            this.props.remove(this.props.specs.id)\r\n            .then(\r\n                data => {\r\n                    data.success ? \r\n                    this.props.updateStatusBar('Removed product', 'bg-success text-light') : \r\n                    this.props.updateStatusBar(`Failed to remove product, ${data.error}`, 'bg-danger text-white', false)\r\n                }\r\n            ).catch(err => console.error(err))\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"col col-sm-4 p-4\">\r\n                <div className={`product rounded ${!this.state.enabled && !this.state.editing ? 'disabledProduct' : null}`}>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                                <h5 className=\"card-title\">\r\n                                    {this.state.editing ? <input className=\"form-control-sm d-inline\" type=\"text\" onChange={(value) => {this.setState({tempName:value.target.value})}} value={this.state.tempName} />  : this.state.name}\r\n                                    {}\r\n                                </h5>\r\n                                <h6 className=\"card-subtitle text-muted mb-2\">\r\n                                    Stock: <span className=\"text-primary\">{this.state.currentStock}</span> / {this.state.stock}\r\n                                </h6>\r\n                            </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"card-text\">\r\n                                <ul className=\"list-group list-group-flush\">\r\n                                    <li className=\"list-group-item\">\r\n                                        Min price: {this.props.sign} {this.state.editing ? <input min=\"0\" step=\"0.01\" type=\"number\" className=\"form-control-sm d-inline\" onChange={(value) => {this.setState({tempMinPrice:value.target.value})}} value={this.state.tempMinPrice} /> : this.state.minPrice }\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Max price: {this.props.sign} {this.state.editing ? <input min=\"0\" step=\"0.01\" type=\"number\" className=\"form-control-sm d-inline\" onChange={(value) => {this.setState({tempMaxPrice:value.target.value})}} value={this.state.tempMaxPrice} /> : this.state.maxPrice }\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Start price: {this.props.sign} {this.state.editing ? <input min=\"0\" step=\"0.01\" type=\"number\" className=\"form-control-sm d-inline\" onChange={(value) => {this.setState({tempStartPrice:value.target.value})}} value={this.state.tempStartPrice} /> : this.state.startPrice }\r\n                                    </li>\r\n                                    <li className=\"list-group-item text-primary\">\r\n                                        Current price: {this.props.sign} {this.state.editing ? <input min=\"0\" step=\"0.01\" type=\"number\" className=\"form-control-sm d-inline\" onChange={(value) => {this.setState({tempCurrentPrice:value.target.value})}} value={this.state.tempCurrentPrice} /> : this.state.currentPrice }\r\n                                    </li>\r\n                                    {this.state.editing ? \r\n                                        <li className=\"list-group-item\">\r\n                                            <button className={`btn ${this.state.name === this.state.tempName &&\r\n                                                        this.state.minPrice === this.state.tempMinPrice &&\r\n                                                        this.state.maxPrice === this.state.tempMaxPrice &&\r\n                                                        this.state.startPrice === this.state.tempStartPrice &&\r\n                                                        this.state.currentPrice === this.state.tempCurrentPrice ? 'btn-warning' : 'btn-success' }`}\r\n                                                    disabled={(\r\n                                                        this.state.name === this.state.tempName &&\r\n                                                        this.state.minPrice === this.state.tempMinPrice &&\r\n                                                        this.state.maxPrice === this.state.tempMaxPrice &&\r\n                                                        this.state.startPrice === this.state.tempStartPrice &&\r\n                                                        this.state.currentPrice === this.state.tempCurrentPrice\r\n                                                        )}\r\n                                                    onClick={this.processUpdate}>\r\n                                                        Save changes\r\n                                            </button> \r\n                                        </li>\r\n                                        : \r\n                                        null\r\n                                    }\r\n                                </ul>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-footer d-flex justify-content-around\">\r\n                            <button className={`btn ${this.state.editing ? 'btn-outline-primary' : null}`} \r\n                                    onClick={() => {this.setState({\r\n                                                editing:!this.state.editing,\r\n                                                tempName: this.state.name,\r\n                                                tempMinPrice: this.state.minPrice,\r\n                                                tempMaxPrice: this.state.maxPrice,\r\n                                                tempStartPrice: this.state.startPrice,\r\n                                                tempCurrentPrice: this.state.currentPrice\r\n                                            })}} >\r\n                                        Edit\r\n                            </button>\r\n                            <button className=\"btn btn-sm btn-danger\" \r\n                                    onClick={this.removeProduct}\r\n                                    disabled={this.state.editing}>\r\n                                        Delete\r\n                            </button>\r\n                            <div className=\"custom-control custom-switch\">\r\n                                <input  type=\"checkbox\"\r\n                                        disabled={this.state.editing}\r\n                                        className=\"custom-control-input\" \r\n                                        value={this.state.enabled} \r\n                                        checked={Boolean(this.state.enabled)} \r\n                                        id={`customSwitch${this.state.id}`} \r\n                                        onChange={this.changeEnable} />\r\n                                <label  className=\"custom-control-label\" \r\n                                        htmlFor={`customSwitch${this.state.id}`}>\r\n                                            {this.state.enabled ? 'Enabled' : 'Disabled'}\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class Products extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            overlay: true\r\n        }\r\n        this.handleLeave = this.handleLeave.bind(this);\r\n        this.formSubmit = this.formSubmit.bind(this);\r\n    }\r\n    handleLeave(){\r\n        if (!this.state.overlay){\r\n            if (Array.from(document.querySelectorAll('.product.add form input')).filter((i) => {\r\n                return i.value ? true : false\r\n            }).length === 0){\r\n                this.setState({\r\n                    overlay:true,\r\n                    complete: false\r\n                })\r\n            }\r\n        } \r\n    }\r\n    formSubmit(e){\r\n        e.preventDefault();\r\n        let source = document.querySelector('.product.add form');\r\n        let form = new FormData(source);\r\n        if (Array.from(form.values()).filter((v) => {\r\n            return v ? true : false \r\n        }).length !== Array.from(form.keys()).length){\r\n            window.alert('All fields are required');\r\n        }else{\r\n            this.props.updateStatusBar('Send new product to server..', 'bg-warning text-light', false);\r\n            form.append('enabled', false);\r\n            form.append('currentPrice', form.get('startPrice'));\r\n            form.append('currentStock',  form.get('stock'));\r\n            form.append('id', uuidv1())\r\n            let prod = {};\r\n            for (let p of form.entries()){\r\n                prod[p[0]] = p[1]\r\n            }\r\n            this.props.new(prod).then(\r\n                data => {\r\n                    if( data.success){\r\n                        this.props.updateStatusBar(`New product saved`, 'bg-success text-light')\r\n                        source.reset()\r\n                        source.blur()\r\n                    }\r\n                    else{\r\n                        this.props.updateStatusBar(`Failed to save new product, ${data.error}`, 'bg-danger text-light', false);\r\n                        source.focus();\r\n                    }\r\n                }\r\n            ).catch(err => this.props.updateStatusBar(`Something went wrong :'(, ${err}`, 'bg-danger text-light', false))\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        document.title = \"Products\"\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"row d-flex\">\r\n                    {this.props.products.map((p, i) => {\r\n                        return <ProductDisplay  key={i} \r\n                                                specs={p} \r\n                                                sign={this.props.sign} \r\n                                                update={this.props.update}\r\n                                                remove={this.props.remove}\r\n                                                updateStatusBar={this.props.updateStatusBar} />\r\n                    })}\r\n                    <div className=\"col col-sm-4 p-4\">\r\n                        <div className=\"product rounded add\" onMouseLeave={this.handleLeave} >\r\n                            {this.state.overlay ? \r\n                                <div className=\"overlay rounded d-flex justify-content-center align-items-center\" onClick={() => {this.setState({overlay: false})}}>\r\n                                    &#43;\r\n                                </div> : null\r\n                            }\r\n                            <div className=\"card\">\r\n                                <form className=\"rounded\" name=\"newProduct\" method=\"POST\" action=\"http://localhost:3001/products\" onSubmit={this.formSubmit}>\r\n                                    <div className=\"card-img-top\">\r\n                                        {/* Have to fix this file upload\r\n                                            <label htmlFor=\"display\" className=\"col\">\r\n                                            Choose an image\r\n                                            <input  name=\"display\"\r\n                                                    type=\"file\" \r\n                                                    className=\"form-control-sm-file\" \r\n                                                    placeholder=\"example.png\"\r\n                                                    accept=\"image/png, image/jpg, image/jpeg, image/gif\"\r\n                                                    required=\"required\" />\r\n                                            <small className=\"text-muted\">for the prettiest result choose a PNG or GIF with transparent background</small>\r\n                                            </label>*/}\r\n                                    </div>\r\n                                    <div className=\"card-header\">\r\n                                            <h5 className=\"card-title\">\r\n                                                    <input  name=\"name\"\r\n                                                            type=\"text\" \r\n                                                            placeholder=\"Name\"\r\n                                                            className=\"form-control-sm\"\r\n                                                            required=\"required\" />\r\n                                            </h5>\r\n                                            <h6 className=\"card-subtitle text-muted mb-2\">\r\n                                                <input name=\"stock\" type=\"number\" min=\"1\" placeholder=\"Stock\" step=\"1\" className=\"form-control-sm d-inline\" required=\"required\" />\r\n                                            </h6>\r\n                                        </div>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"card-text\">\r\n                                            <ul className=\"list-group list-group-flush\">\r\n                                                <li className=\"list-group-item\">\r\n                                                    {this.props.sign}<input name=\"minPrice\" \r\n                                                                            min=\"0\" \r\n                                                                            step=\"0.01\" \r\n                                                                            placeholder=\"Minimum Price\" \r\n                                                                            type=\"number\" \r\n                                                                            className=\"form-control-sm d-inline\" \r\n                                                                            required=\"required\" />\r\n                                                </li>\r\n                                                <li className=\"list-group-item\">\r\n                                                    {this.props.sign}<input name=\"maxPrice\" \r\n                                                                            type=\"number\" \r\n                                                                            min=\"0\" \r\n                                                                            step=\"0.01\" \r\n                                                                            placeholder=\"Maximum Price\" \r\n                                                                            className=\"form-control-sm d-inline\" \r\n                                                                            required=\"required\" />\r\n                                                </li>\r\n                                                <li className=\"list-group-item\">\r\n                                                   {this.props.sign}<input  name=\"startPrice\" \r\n                                                                            type=\"number\" \r\n                                                                            min=\"0\" \r\n                                                                            step=\"0.01\" \r\n                                                                            placeholder=\"Starting Price\" \r\n                                                                            className=\"form-control-sm d-inline\" \r\n                                                                            required=\"required\" />\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"card-footer d-flex justify-content-around\">\r\n                                        <button type=\"submit\"\r\n                                                className=\"btn btn-primary\"\r\n                                                style={{order:1}}>\r\n                                            Done\r\n                                        </button>\r\n                                        <button type=\"reset\"\r\n                                                className=\"btn btn-secondary\"\r\n                                                style={{order:0}}>\r\n                                            Reset\r\n                                        </button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>                   \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './Loader.css';\r\n\r\nconst divStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: window.innerHeight+'px',\r\n    width:'100%',\r\n    position: 'absolute',\r\n    top:0,\r\n    left:0,\r\n}\r\nconst loaderStyle = {\r\n    height: '100px',\r\n    width: '100px',\r\n    border: '16px #f5b042 solid',\r\n    borderTop: '16px rgba(0,0,0,0) solid',\r\n    borderRadius: '50%',\r\n    animationName: 'rotation',\r\n    animationDuration: '2s',\r\n    animationIterationCount: 'infinite',\r\n    animationTimingFunction: 'linear'\r\n}\r\nconst containerStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n}\r\n\r\nconst Loader = (props) => (\r\n    <React.Fragment>\r\n        <div style={divStyle}>\r\n            <div style={containerStyle}>\r\n                <div style={loaderStyle}>\r\n                </div>\r\n                <div className=\"mt-2\">\r\n                    {props.waitingFor}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n);\r\n\r\nexport default Loader;","import React from 'react';\r\n\r\nconst footerStyle = {\r\n    position: \"fixed\",\r\n    left: 0,\r\n    bottom: 0,\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n    zIndex:1000\r\n}\r\n\r\nexport default class Statusbar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            content: this.props.content\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({\r\n            content: nextProps.content\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <footer style={footerStyle} className={`p-2 mt-2 ${this.props.pClass}`}>\r\n                    {this.state.content}\r\n                </footer>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport Navigation from './Navigation';\r\nimport Register from './blocks/Register';\r\nimport Settings from './blocks/Settings';\r\nimport Products from './blocks/Products';\r\nimport Loader from './blocks/Loader';\r\nimport Statusbar from './Statusbar';\r\n\r\nexport default class Main extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            settings: {},\r\n            products: [],\r\n            cart: [],\r\n            loading: '',\r\n            statusbar: null,\r\n            configSaved: false,\r\n            isMaster: false,\r\n            connected: false\r\n        }\r\n        this.URL = null;\r\n        this.ws = null;\r\n        localStorage.setItem('app_id', null);\r\n        this.updateStatus = this.updateStatus.bind(this);\r\n        this.updateSettings = this.updateSettings.bind(this);\r\n        this.updateProduct = this.updateProduct.bind(this);\r\n        this.newProduct = this.newProduct.bind(this);\r\n        this.removeProduct = this.removeProduct.bind(this);\r\n        this.restartServer = this.restartServer.bind(this);\r\n        this.addToCart = this.addToCart.bind(this);\r\n        this.removeFromCart = this.removeFromCart.bind(this)\r\n        this.emptyCart = this.emptyCart.bind(this);\r\n        this.checkoutCart = this.checkoutCart.bind(this);\r\n        this.connect = this.connect.bind(this);\r\n\r\n        this.forceUpdate = this.forceUpdate.bind(this);\r\n    }\r\n\r\n    //Helper functions\r\n    connect(server){\r\n        this.ws = new WebSocket(server);\r\n        this.ws.addEventListener('open', (e) => {\r\n            if (this.ws.readyState === 1){\r\n                this.ws.send(JSON.stringify({\r\n                    'type': 'connect',\r\n                    'data': localStorage.getItem('app_id')\r\n                }))\r\n                this.updateStatus('Connected to server', 'bg-success text-light');\r\n                this.setState({\r\n                    connected: true\r\n                })\r\n            }\r\n            else{\r\n                this.setState({\r\n                    connected: false\r\n                })\r\n            }\r\n        })\r\n        this.ws.addEventListener('message', (msg) => {\r\n            msg = JSON.parse(msg.data)\r\n            switch(msg.type){\r\n                case 'master':\r\n                        if (!!msg.data){\r\n                            this.setState({\r\n                                isMaster: true\r\n                            });\r\n                            localStorage.setItem('app_id', msg.data)\r\n                        }\r\n                    break;\r\n                case 'update':\r\n                        this.setState({\r\n                            products: msg.data\r\n                        })\r\n                    break;\r\n                case 'updateConfig':\r\n                        this.setState({\r\n                            settings: msg.data,\r\n                            configSaved: false\r\n                        });\r\n                    break;\r\n                case 'updateStock':\r\n                        this.setState({\r\n                            products: this.state.products.map(product => {\r\n                                let index = msg.data.findIndex((dataProduct) => {\r\n                                    return dataProduct.for === product.id \r\n                                });\r\n                                if (index !== -1) {\r\n                                    product.currentStock = msg.data[index].stock\r\n                                }\r\n                                return product;\r\n                            })\r\n                        }, () => {\r\n                            this.updateStatus('Stock updated', 'bg-success text-white');\r\n                        });\r\n                    break;\r\n                case 'checkoutComplete':\r\n                        this.setState({\r\n                            cart: []\r\n                        }, () => {\r\n                            this.emptyCart();\r\n                        })\r\n                    break;\r\n                case 'updateProduct':\r\n                        this.setState(prevState => ({\r\n                            products: prevState.products.map((prod) => {\r\n                                    if(prod.id === msg.data.id){\r\n                                        msg.data.props.forEach((prop) => {\r\n                                            prod[prop.propName] = prop.propValue\r\n                                        })\r\n                                    }\r\n                                    return prod\r\n                                })\r\n                        }), () => {\r\n                            this.updateStatus('Product updated', 'bg-success text-white');\r\n                        });\r\n                    break;\r\n                case 'newProduct':\r\n                        this.setState(prevState => ({\r\n                            products: [\r\n                                ...prevState.products,\r\n                                msg.data\r\n                            ]\r\n                        }), () => {\r\n                            this.updateStatus('New product added', 'bg-success text-white');\r\n                        });\r\n                    break;\r\n                case 'removeProduct':\r\n                        this.setState(prevState => ({\r\n                            products: prevState.products.filter(prod => {\r\n                                return prod.id !== msg.data\r\n                            })\r\n                        }), () => {\r\n                            this.updateStatus(`${msg.data} removed`, 'bg-warning text-white');\r\n                        })\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        this.ws.addEventListener('error', () => {\r\n            this.ws.close()\r\n        })\r\n        this.ws.addEventListener('close', () => {\r\n            this.setState({\r\n                connected: false\r\n            })\r\n            this.updateStatus(`Disconnected :'( Hold on! Trying to reconnect...`, 'bg-danger text-white', false)\r\n            setTimeout(() => {\r\n                this.connect(server);\r\n            }, 500)\r\n        })\r\n    }\r\n    addToCart(id, amt){\r\n        let product = this.state.products.find(function(p){return p.id === id})\r\n        if (amt <= product.currentStock && product.enabled){\r\n            //product is still in stock and is enabled for sale\r\n            let index = this.state.cart.findIndex((entry) => {\r\n                return entry.id === id\r\n            })\r\n            if(index === -1){\r\n                //Add new product to cart\r\n                this.setState({\r\n                    cart : \r\n                        [\r\n                            ...this.state.cart,\r\n                            {\r\n                                \"id\": id,\r\n                                \"quantity\": amt,\r\n                                \"readableName\": product.name,\r\n                                \"currentPrice\": product.currentPrice\r\n                            }\r\n                        ]\r\n                }) \r\n            }\r\n            else {\r\n                //product already in cart\r\n                this.setState({\r\n                    cart : \r\n                        [\r\n                            ...this.state.cart.map((prod, i) => {\r\n                                if(index !== i) {\r\n                                    return prod\r\n                                }else {\r\n                                    if (prod.quantity + amt <= product.currentStock){\r\n                                        prod.quantity += amt\r\n                                    }\r\n                                    return prod;\r\n                                }\r\n                            })\r\n                            \r\n                        ]\r\n                }) \r\n            }\r\n        }\r\n    }\r\n    forceUpdate(){\r\n        this.ws.send(JSON.stringify({\r\n            'type': 'forceUpdate'\r\n        }))\r\n    }\r\n    removeFromCart(id, amt){\r\n        this.setState({\r\n            cart: [\r\n                ...this.state.cart.map((prod) => {\r\n                    if (prod.id === id){\r\n                        if(prod.quantity - amt >= 0){\r\n                            prod.quantity -= amt\r\n                            return prod\r\n                        }\r\n                        else {\r\n                            prod.quantity = 0\r\n                            return prod\r\n                        }\r\n                    }\r\n                    else{\r\n                        return prod\r\n                    }\r\n                })\r\n            ]\r\n        })\r\n    }\r\n    emptyCart(){\r\n        this.setState({\r\n            cart: []\r\n        })\r\n    }\r\n    checkoutCart(){\r\n        this.ws.send(JSON.stringify({\r\n            'type': 'checkout',\r\n            'data': this.state.cart\r\n        }))\r\n    }\r\n    updateStatus(content, pClass, timeout=true){\r\n        this.setState({\r\n            statusbar: {\r\n                content: content,\r\n                pClass: pClass\r\n            }\r\n        })\r\n        if(timeout){\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    statusbar: null\r\n                })\r\n            }, 3000)\r\n        }\r\n    }\r\n    updateSettings(ret){\r\n        this.setState({\r\n            settings: ret\r\n        }, () => {\r\n            this.saveSettings().then((success, fail) => {\r\n                if (fail) {\r\n                    this.updateStatus(`Server error`, 'bg-warning text-white', false);\r\n                }\r\n                else {\r\n                    this.updateStatus(...success);\r\n                }\r\n            })\r\n        })\r\n    }\r\n    saveSettings(){\r\n        return new Promise((resolve, reject) => {\r\n            fetch('http://localhost:3000/settings', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"satisfy\": btoa(localStorage.getItem('app_id')),\r\n                    \"settings\": this.state.settings\r\n                })\r\n            }).then(\r\n                resp => resp.json()  \r\n            ).then(\r\n                data => {\r\n                    if (data.success){\r\n                        this.setState({\r\n                            configSaved: true\r\n                        })\r\n                        resolve(['Saved configuration', 'bg-success text-white'])\r\n                    } else {\r\n                        resolve([`Failed to save configuration, ${data.error}`, 'bg-danger text-white', false])\r\n                    } \r\n                }\r\n            ).catch(err => reject([err, 'bg-warning text-light', false]))\r\n        })\r\n    }\r\n    newProduct(product){\r\n        return new Promise((resolve, reject) => {\r\n            fetch('http://localhost:3000/product', {\r\n                method: 'POST',\r\n                headers:{\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"satisfy\": btoa(localStorage.getItem('app_id')),\r\n                    \"data\": {\r\n                        \"type\": \"add\",\r\n                        \"payload\": product\r\n                    }\r\n                })\r\n            }).then(\r\n                response => response.json()\r\n            ).then(\r\n                data => resolve(data)\r\n            ).catch(err => reject(err)) \r\n        })\r\n    }\r\n    updateProduct(id, props){\r\n        return new Promise((resolve, reject) => {\r\n            fetch('http://localhost:3000/product', {\r\n                method: 'POST',\r\n                headers:{\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"satisfy\": btoa(localStorage.getItem('app_id')),\r\n                    \"data\": {\r\n                        \"type\": \"update\",\r\n                        \"payload\": {\r\n                            \"id\": id,\r\n                            \"props\": props\r\n                        }\r\n                    }\r\n                })\r\n            }).then(\r\n                response => {\r\n                    return response.json()\r\n                }\r\n            ).then(\r\n                data => resolve(data)\r\n            ).catch(err => reject(err)) \r\n        })\r\n    }\r\n    removeProduct(id){\r\n        return new Promise((resolve, reject) => {\r\n            fetch('http://localhost:3000/product', {\r\n                method: 'POST',\r\n                headers:{\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"satisfy\": btoa(localStorage.getItem('app_id')),\r\n                    \"data\": {\r\n                        \"type\": \"remove\",\r\n                        \"payload\": id\r\n                    }\r\n                })\r\n            }).then(\r\n                response => {\r\n                    return response.json()\r\n                }\r\n            ).then(\r\n                data => resolve(data)\r\n            ).catch(err => reject(err)) \r\n        })\r\n    }\r\n    restartServer(){\r\n        fetch('http://localhost:3000/restartServer', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({'satisfy': btoa(localStorage.getItem('app_id'))})\r\n        })\r\n    }\r\n    //lifecycle\r\n    componentWillMount(){\r\n        document.body.classList.add('container-fluid');\r\n        document.title = 'Beurscafe';\r\n    }\r\n    componentDidMount(){\r\n        this.URL = new URL(window.location.href);\r\n        this.setState({\r\n            loading: 'Loading Settings'\r\n        })\r\n        fetch(`http://localhost:3000/api/settings`).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {this.setState({\r\n                settings: json,\r\n                loading: 'Loading Products'\r\n            })\r\n            return fetch(`http://localhost:3000/api/products`)\r\n        }).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => this.setState({\r\n                products: json,\r\n                loading: false\r\n            })\r\n            \r\n        )\r\n        this.connect('ws://localhost:3000/');\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Router>\r\n                    <Navigation brand={this.state.settings.name} role={this.state.isMaster} connected={this.state.connected} />\r\n                    {this.state.loading ? \r\n                        <Loader waitingFor={this.state.loading} /> \r\n                        :  \r\n                        <React.Fragment>\r\n                            <button onClick={this.forceUpdate}>Force update</button>\r\n                            <Route \r\n                                path=\"/register\"\r\n                                render={() => <Register products={this.state.products}\r\n                                                        cart={this.state.cart}\r\n                                                        sign={this.state.settings.sign}\r\n                                                        add={this.addToCart}\r\n                                                        remove={this.removeFromCart} \r\n                                                        reset={this.emptyCart}\r\n                                                        done={this.checkoutCart}/>} />\r\n                            <Route \r\n                                path=\"/products\" \r\n                                render={() => <Products products={this.state.products} \r\n                                                        sign={this.state.settings.sign} \r\n                                                        updateStatusBar={this.updateStatus} \r\n                                                        update={this.updateProduct}\r\n                                                        remove={this.removeProduct}\r\n                                                        new={this.newProduct} />  } />\r\n                            <Route \r\n                                path=\"/settings\" \r\n                                render={() => <Settings {...this.state.settings} \r\n                                                        configSaved={this.state.configSaved} \r\n                                                        restartServer={this.restartServer} \r\n                                                        updateStatusBar={this.updateStatus} \r\n                                                        updateSettings={this.updateSettings} />} />\r\n                        </React.Fragment>\r\n                    }\r\n                </Router>\r\n                {this.state.statusbar ? <Statusbar content={this.state.statusbar.content} pClass={this.state.statusbar.pClass}   /> : null}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Main from './main';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<Main />, document.getElementById('root'));"],"sourceRoot":""}