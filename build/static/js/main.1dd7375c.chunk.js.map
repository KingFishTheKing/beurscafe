{"version":3,"sources":["Navigation.jsx","blocks/Register.jsx","blocks/Settings.jsx","blocks/Products.jsx","blocks/Loader.jsx","Statusbar.jsx","main.jsx","index.jsx"],"names":["Navigation","react_default","a","createElement","Fragment","className","this","props","name","react_router_dom","to","master","React","Component","imageStyle","maxWidth","maxHeight","width","height","objectFit","ImageContainer","_React$Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","alt","src","source","style","ProductDisplay","_React$Component2","_this","call","state","amount","currentPrice","stock","hasUpdated","plusOne","bind","assertThisInitialized","minusOne","setInput","document","title","setState","productId","nextProps","display","Register_ImageContainer","concat","onClick","Cart","_React$Component3","_this2","total","products","_this3","entries","map","Math","round","reduce","b","reset","done","Register","_this4","Array","length","fill","id","prevState","p","i","Number","_this5","ret","v","db_id","_id","quantity","readAbleName","currentStock","filter","type","data","ws","send","JSON","stringify","updateStatus","_this6","getUpdate","Register_Cart","Register_ProductDisplay","assign","Settings","increments","sign","refreshInterval","updateState","input","s","target","updateConfigState","htmlFor","onChange","placeholder","min","max","step","updateStatusBar","updateSettings","disabled","savedConfig","window","confirm","console","log","Products","divStyle","justifyContent","alignItems","innerHeight","position","top","left","loaderStyle","border","borderTop","borderRadius","animationName","animationDuration","animationIterationCount","animationTimingFunction","containerStyle","flexDirection","Loader","waitingFor","footerStyle","bottom","textAlign","Statusbar","content","pClass","Main","settings","process","APP_ID","loading","statusbar","URL","localStorage","setItem","configEnableDisable","restartServer","server","WebSocket","onopen","e","addEventListener","msg","parse","isMaster","setTimeout","connect","onerror","timeout","undefined","saveSettings","then","resp","err","toConsumableArray","Promise","resolve","reject","fetch","method","headers","Content-Type","x-app_id","getItem","body","json","success","error","catch","bool","classList","add","location","href","response","viewer","close","_this7","Navigation_Navigation","role","src_blocks_Loader","react_router","from","path","render","Register_Register","component","Settings_Settings","Statusbar_Statusbar","ReactDOM","main_Main","getElementById"],"mappings":"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","file":"static/js/main.1dd7375c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Navigation extends React.Component{\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <nav className=\"navbar navbar-expand bg-light sticky-top mb-2 navbar-light\">\r\n                    <div className=\"navbar-brand\">\r\n                        {this.props.name}\r\n                    </div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/register\" className=\"nav-link\">\r\n                                Register\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/products\" className=\"nav-link\">\r\n                                Products\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/settings\" className=\"nav-link\">\r\n                                Settings\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"navbar-nav\">\r\n                        Running as {this.props.master ? '<span className=\"text-red\">Master</span>' : '<span className=\"text-primary\">Slave</span>'}\r\n                    </div>\r\n                </nav>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './Register.css';\r\nconst imageStyle= {\r\n    maxWidth: \"100px\",\r\n    maxHeight: '100px',\r\n    width: 'auto',\r\n    height: 'auto',\r\n    objectFit: 'contain'\r\n}\r\n\r\nexport class ImageContainer extends React.Component{\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <img alt=\"\" src={this.props.source} style={imageStyle} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport class ProductDisplay extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            amount : this.props.amount,\r\n            currentPrice: this.props.currentPrice,\r\n            stock: this.props.stock,\r\n            hasUpdated: true\r\n        }\r\n        this.plusOne = this.plusOne.bind(this);\r\n        this.minusOne = this.minusOne.bind(this);\r\n        this.setInput = this.props.setInput;\r\n    }\r\n    componentWillMount(){\r\n        document.title = 'Register'\r\n    }\r\n    minusOne(){\r\n        if(this.state.amount === 0)\r\n        {\r\n            return\r\n        }\r\n        else{\r\n            this.setState({\r\n                amount: this.state.amount-1,\r\n                stock: this.state.stock+1,\r\n                hasUpdated: false\r\n            });\r\n        }\r\n    }\r\n    plusOne(){\r\n        if (this.state.amount < this.state.stock){\r\n            this.setState({\r\n                amount: this.state.amount+1,\r\n                stock: this.state.stock-1,\r\n                hasUpdated: false\r\n            });\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        if (!this.state.hasUpdated){\r\n            this.setInput(this.props.productId, this.state.amount);\r\n            this.setState({\r\n                hasUpdated: true\r\n            });\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({\r\n            amount: nextProps.amount,\r\n            currentPrice: nextProps.currentPrice,\r\n            stock: nextProps.stock\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"col-auto col-sm-6 col-md-4 col-lg-3 mb-2\">\r\n                    <div className=\"bg-light rounded p-3\">\r\n                        <div className=\"row mb-4 d-flex justify-content-between p-3\">\r\n                            <b>\r\n                                {this.props.name} \r\n                            </b>\r\n                            € {this.state.currentPrice}\r\n                            <small className={this.state.stock < 30 ? \"text-danger\" : \"text-muted\"}>(stock: {this.state.stock})</small>\r\n                        </div>\r\n\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-12 d-flex justify-content-center\">\r\n                                {this.props.display ? <ImageContainer className=\"col-12\" source={`${process.env.NODE_ENV === \"development\" ? 'http://localhost:3000' : ''}/image/${this.props.display}`} /> : null}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-6\">\r\n                                <p className=\"buttons minus rounded\" onClick={this.minusOne}>-</p>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <p className=\"buttons plus rounded\" onClick={this.plusOne}>+</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>          \r\n                </div> \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport class Cart extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            total: props.total,\r\n            products: props.products\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({\r\n            total: nextProps.total,\r\n            products: nextProps.products\r\n        });\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"col-12 col-lg-2 row ml-auto mr-auto mb-2 align-items-start\">\r\n                    <ul style={{width:'100%'}} className=\"list-group list-group-flush col-12\">\r\n                        {Object.entries(this.state.total).map(a => {\r\n                            return(\r\n                                <li key={a[0]} className=\"list-group-item d-flex justify-content-between align-items-start\">\r\n                                    {this.state.products[a[0]].name} <small className=\"text-muted ml-2\">(€{this.state.products[a[0]].currentPrice})</small>\r\n                                    <span className=\"badge badge-primary badge-pill ml-auto\">{a[1]}</span>\r\n                                </li>)\r\n                        })}\r\n                    </ul>\r\n                    <p className=\"mt-3 col-12 h3 d-flex justify-content-around text-primary\">\r\n                        <span>Total €{Math.round(Object.entries(this.state.total).map(a => {\r\n                                return this.state.products[a[0]].currentPrice * [a[1]]\r\n                            }).reduce((a, b) => {\r\n                                return a + b\r\n                            }, 0) * 100) / 100}\r\n                        </span>\r\n                    </p>\r\n                    <div className=\"col-12 d-flex justify-content-around\">\r\n                        <button className=\"btn btn-danger\" onClick={this.props.reset}>Reset</button>\r\n                        <button className=\"btn btn-primary btn-lg\" onClick={this.props.done}>Done</button>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class Register extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            total: Array(Object.entries(this.props.products).length).fill(0)\r\n        }\r\n        this.done = this.done.bind(this);\r\n        this.reset= this.reset.bind(this);\r\n    }\r\n    setInput(id, amount){\r\n        this.setState(prevState => ({\r\n            total: prevState.total.map((p, i) => {\r\n                return i === Number(id) ? amount : p\r\n            })\r\n        }))\r\n    }\r\n    reset(){\r\n        this.setState({\r\n            total: Array(Object.entries(this.props.products).length).fill(0)\r\n        });\r\n\r\n    }\r\n    done(){\r\n        let ret = this.state.total.map((v, i) => {\r\n                return {\r\n                    \"id\": i,\r\n                    \"db_id\": this.props.products[i]._id,\r\n                    \"quantity\": v,\r\n                    \"readAbleName\": this.props.products[i].name,\r\n                    \"currentPrice\": this.props.products[i].currentPrice,\r\n                    \"currentStock\": this.props.products[i].stock - v,\r\n                }\r\n            }\r\n        ).filter((v) => {\r\n            return v.quantity !== 0\r\n        })\r\n        ret = {\r\n            \"type\": \"updatePrices\",\r\n            \"data\": ret\r\n        };\r\n        this.props.ws.send(JSON.stringify(ret));\r\n        this.reset();\r\n        this.props.updateStatus('Sending updates to server...', 'bg-warning text-white', false)\r\n    }\r\n    getUpdate(){\r\n        this.props.ws.send(JSON.stringify({\r\n            \"type\":\"getUpdate\"\r\n        }))\r\n    }\r\n    componentWillMount(){\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"row\">\r\n                <button onClick={this.getUpdate.bind(this)}>Update</button>\r\n                    <Cart products={this.props.products}  total={this.state.total} reset={this.reset} done={this.done} />\r\n                    <div className={`row productList mr-auto col-12 col-lg-10`}>\r\n                        {Object.entries(this.props.products).map((p, i) => <ProductDisplay key={i} productId={p[0]} {...p[1]} amount={this.state.total[p[0]] || 0} id={this.props.id} setInput={this.setInput.bind(this)} />)}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Settings extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: props.name || '',\r\n            increments: props.increments || 0.05,\r\n            round: props.round || 0.05,\r\n            sign: props.sign || '€',\r\n            refreshInterval: props.refreshInterval || 180,\r\n        }\r\n        this.updateState = this.updateState.bind(this);\r\n    }\r\n    updateState(input){\r\n        let s = {};\r\n        s[input.target.name] = input.target.value\r\n        this.setState(s);\r\n        this.props.updateConfigState(false)\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                    <form className=\"form\">\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col\">\r\n                            <label htmlFor=\"name\">\r\n                                Name:\r\n                            </label>\r\n                            <input  type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    name=\"name\" \r\n                                    value={this.state.name} \r\n                                    onChange={this.updateState} \r\n                                    placeholder=\"Set or update the name for your application\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col\">\r\n                            <label htmlFor=\"increments\">\r\n                                Increment/decrease price by:\r\n                            </label>\r\n                            <input  type=\"number\" \r\n                                    className=\"form-control\" \r\n                                    name=\"increments\" \r\n                                    placeholder={this.state.increments}  \r\n                                    onChange={this.updateState}\r\n                                    min=\"0.05\" \r\n                                    max=\"0.50\" \r\n                                    step=\"0.05\" />\r\n                        </div>\r\n                        <div className=\"form-group col\">\r\n                            <label htmlFor=\"round\">\r\n                                Round price to nearest:\r\n                            </label>\r\n                            <select name=\"round\" \r\n                                    className=\"form-control\" \r\n                                    value={this.state.round}\r\n                                    onChange={this.updateState}>\r\n                                <option value=\"0\">0</option>\r\n                                <option value=\"0.01\">0.01</option>\r\n                                <option value=\"0.05\">0.05</option>\r\n                                <option value=\"0.1\">0.1</option>\r\n                                <option value=\"0.2\">0.2</option>\r\n                                <option value=\"0.5\">0.5</option>\r\n                            </select>\r\n                    </div> \r\n                    <div className=\"form-group col\">\r\n                            <label htmlFor=\"sign\">\r\n                                Currency symbol \r\n                            </label>\r\n                        <select  name=\"sign\" \r\n                                    value={this.state.sign}\r\n                                    onChange={this.updateState} \r\n                                    className=\"form-control\">\r\n                            <option value=\"€\">€</option>\r\n                            <option value=\"$\">$</option>\r\n                            <option value=\"£\">£</option>\r\n                        </select>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col\">\r\n                            <label htmlFor=\"refreshIntervalRange\">\r\n                                Refresh interval in seconds <small className=\"text-muted\">Setting 0 will mean that every time an order is pushed to the server it get's router directly to all clients</small>\r\n                            </label>\r\n                            <div>{this.state.refreshInterval}</div>\r\n                            <input  className=\"form-control-range\" \r\n                                    name=\"refreshInterval\" \r\n                                    type=\"range\" \r\n                                    min=\"0\" \r\n                                    max=\"300\" \r\n                                    value={this.state.refreshInterval}\r\n                                    onChange={this.updateState} />\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"form-row justify-content-around\">\r\n                        <button type=\"button\" \r\n                                className=\"btn btn-success\" \r\n                                onClick={() => {\r\n                                        this.props.updateStatusBar('Saving configuration', 'bg-primary text-white', false);\r\n                                        this.props.updateSettings(this.state)\r\n                                    }\r\n                                }>\r\n                            Save\r\n                        </button>\r\n                        <button type=\"button\"\r\n                                className=\"btn btn-warning\"\r\n                                disabled={!this.props.savedConfig}\r\n                                onClick={() => {\r\n                                    if (window.confirm('Applying settings will restart the server, this will reset the application, timers and remove any unsaved or in progress transactions since last update\\n Are you sure?')){\r\n                                        console.log('do it!')\r\n                                    }\r\n                                }}>\r\n                            Apply settings\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default class Products extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = props\r\n    }\r\n    render(){\r\n        return(\r\n            <h1>Products</h1>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './Loader.css';\r\n\r\nconst divStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: window.innerHeight+'px',\r\n    width:'100%',\r\n    position: 'absolute',\r\n    top:0,\r\n    left:0,\r\n}\r\nconst loaderStyle = {\r\n    height: '100px',\r\n    width: '100px',\r\n    border: '16px #f5b042 solid',\r\n    borderTop: '16px rgba(0,0,0,0) solid',\r\n    borderRadius: '50%',\r\n    animationName: 'rotation',\r\n    animationDuration: '2s',\r\n    animationIterationCount: 'infinite',\r\n    animationTimingFunction: 'linear'\r\n}\r\nconst containerStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n}\r\n\r\nconst Loader = (props) => (\r\n    <React.Fragment>\r\n        <div style={divStyle}>\r\n            <div style={containerStyle}>\r\n                <div style={loaderStyle}>\r\n                </div>\r\n                <div className=\"mt-2\">\r\n                    {props.waitingFor}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n);\r\n\r\nexport default Loader;","import React from 'react';\r\n\r\nconst footerStyle = {\r\n    position: \"fixed\",\r\n    left: 0,\r\n    bottom: 0,\r\n    width: \"100%\",\r\n    textAlign: \"center\"\r\n}\r\n\r\nexport default class Statusbar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            content: this.props.content\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({\r\n            content: nextProps.content\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <footer style={footerStyle} className={`p-2 mt-2 ${this.props.pClass}`}>\r\n                    {this.state.content}\r\n                </footer>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Navigation from './Navigation';\r\nimport Register from './blocks/Register';\r\nimport Settings from './blocks/Settings';\r\nimport Products from './blocks/Products';\r\nimport Loader from './blocks/Loader';\r\nimport Statusbar from './Statusbar';\r\n\r\nexport default class Main extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            settings: {\r\n                id: process.env.APP_ID,\r\n                name: 'default',\r\n                increments: 0.05,\r\n                round: 0.05,\r\n                sign: '€',\r\n                refreshInterval: 180\r\n            },\r\n            products: {},\r\n            loading: '',\r\n            statusbar: null,\r\n            savedConfig: false,\r\n            master: false\r\n        }\r\n        this.URL = null;\r\n        this.ws = null;\r\n        localStorage.setItem('app_id', null);\r\n        this.updateStatus = this.updateStatus.bind(this);\r\n        this.updateSettings = this.updateSettings.bind(this);\r\n        this.configEnableDisable = this.configEnableDisable.bind(this);\r\n        this.restartServer = this.restartServer.bind(this);\r\n    }\r\n\r\n    //Helper functions\r\n    connect(server){\r\n        this.ws = new WebSocket(server);\r\n        this.ws.onopen = (e) => {\r\n            this.updateStatus('Connected to server', 'bg-success text-light');\r\n        }\r\n        this.ws.addEventListener('message', (msg) => {\r\n            msg = JSON.parse(msg.data)\r\n            switch(msg.type){\r\n                case 'masterID':\r\n                    localStorage.setItem('app_id', msg.data)\r\n                    break;\r\n                case 'master':\r\n                    this.setState({\r\n                        isMaster: msg.data\r\n                    }) \r\n                    break;\r\n                case 'updateStock':\r\n                    this.setState(prevState => ({\r\n                        products: msg.data,\r\n                    }));\r\n                    this.updateStatus('Stock updated', 'bg-success text-white');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        this.ws.addEventListener('close',  () => {\r\n            this.updateStatus(`Disconnected :'( Hold on! Trying to reconnect...`, 'bg-danger text-white', false)\r\n            setTimeout(() => {\r\n                this.connect(server);\r\n            }, 2000)\r\n        })\r\n        this.ws.onerror = () => {\r\n            this.updateStatus(`Disconnected :'( Hold on! Trying to reconnect...`, 'bg-danger text-white', false)\r\n            setTimeout(() => {\r\n                this.connect(server);\r\n            }, 2000)\r\n        }\r\n    }\r\n    updateStatus(content, pClass, timeout=true){\r\n        this.setState({\r\n            statusbar: {\r\n                content: content,\r\n                pClass: pClass\r\n            }\r\n        })\r\n        if(timeout){\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    statusbar: null\r\n                })\r\n            }, 3000)\r\n        }\r\n    }\r\n    updateSettings(ret){\r\n        this.setState({\r\n            settings: ret\r\n        }, () => {\r\n            this.saveSettings().then((resp, err) => {\r\n                if (err) {\r\n                    this.updateStatus(`Server error`, 'bg-warning text-white', false);\r\n\r\n                }\r\n                else {\r\n                    this.updateStatus(...resp);\r\n                }\r\n            })\r\n        })\r\n    }\r\n    saveSettings(){\r\n        return new Promise((resolve, reject) => {\r\n            fetch('http://localhost:3000/settings', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-app_id': localStorage.getItem('app_id')\r\n                },\r\n                body: JSON.stringify(this.state.settings)\r\n            }).then(\r\n                resp => resp.json()  \r\n            ).then(\r\n                data => {\r\n                    data = JSON.parse(data)\r\n                    if (data.success){\r\n                        this.setState({\r\n                            savedConfig: true\r\n                        })\r\n                        resolve(['Saved configuration', 'bg-success text-white'])\r\n                    } else reject([`Failed to save configuration, ${data.error}`, 'bg-warning text-white', false])\r\n                }\r\n            ).catch(err => reject([err, 'bg-warning text-light', false]))\r\n        })\r\n    }\r\n    configEnableDisable(bool){\r\n        this.setState({\r\n            savedConfig: bool\r\n        })\r\n    }\r\n    restartServer(){\r\n        fetch('http://localhost:3000/restartServer', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-app_id': localStorage.getItem('app_id')\r\n            },\r\n            body: JSON.stringify(true)\r\n        })\r\n    }\r\n    //lifecycle\r\n    componentWillMount(){\r\n        document.body.classList.add('container-fluid');\r\n        document.title = 'Beurscafe';\r\n    }\r\n    componentDidMount(){\r\n        this.URL = new URL(window.location.href);\r\n        this.setState({\r\n            loading: 'Loading Settings'\r\n        })\r\n        fetch(`http://localhost:3000/api/settings`).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {this.setState({\r\n                settings: json,\r\n                loading: 'Loading Products'\r\n            })\r\n            return fetch(`http://localhost:3000/api/products`)\r\n        }).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => this.setState({\r\n                products: json,\r\n                loading: false\r\n            })\r\n        )\r\n        this.connect('ws://localhost:3000/');\r\n    }\r\n    componentWillUnmount(){\r\n        this.viewer.close();\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Router>\r\n                    <Navigation role={this.state.master} />\r\n                    {this.state.loading ? \r\n                        <Loader waitingFor={this.state.loading} /> \r\n                        :  \r\n                        <React.Fragment>\r\n                            <Redirect \r\n                                from=\"/\" \r\n                                to=\"/register\" />\r\n                            <Route \r\n                                path=\"/register\"\r\n                                render={() => <Register ws={this.ws} updateStatus={this.updateStatus}  id={this.state.settings.id} products={this.state.products} />} />\r\n                            <Route \r\n                                path=\"/products\" \r\n                                component={Products}  />\r\n                            <Route \r\n                                path=\"/settings\" \r\n                                render={() => <Settings {...this.state.settings} savedConfig={this.state.savedConfig} restartServer={this.restartServer} updateConfigState={this.configEnableDisable} updateStatusBar={this.updateStatus} updateSettings={this.updateSettings} />} />\r\n                        </React.Fragment>\r\n                    }\r\n                </Router>\r\n                {this.state.statusbar ? <Statusbar content={this.state.statusbar.content} pClass={this.state.statusbar.pClass}   /> : null}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Main from './main';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<Main />, document.getElementById('root'));"],"sourceRoot":""}